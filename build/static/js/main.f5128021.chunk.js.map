{"version":3,"sources":["FirebaseService.ts","VotePicker.tsx","Voting.tsx","VoteList.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["addVote","vote","firebase","database","ref","push","updateVote","VOTES","key","set","VotePicker","_this","this","react_default","a","createElement","className","onChange","event","props","target","value","disabled","hidden","placeHolder","values","map","React","Component","Voting","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleVoteButtonClick","state","selectedArtist","musicVote","performanceVote","clothesVote","setState","votes","find","user","artist","objectSpread","music","performance","clothes","artists","_this2","src_VotePicker","type","onClick","VoteList","App","onVoteAdded","prevState","concat","toConsumableArray","onVoteChanged","changedVote","index","findIndex","left","slice","right","initializeApp","databaseURL","on","child","val","src","width","src_Voting","src_VoteList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5128021.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport { Vote } from \"./Voting\";\r\n\r\nconst VOTES = \"votes\";\r\n\r\nexport const initFirebaseVotes = (\r\n  onVoteAdded: (vote: Vote) => void,\r\n  onVoteChanged: (vote: Vote) => void\r\n) => {\r\n\r\n  firebase.initializeApp({\r\n    \"databaseURL\": \"https://eurovision-340ed.firebaseio.com\",\r\n  });\r\n\r\n  firebase\r\n    .database()\r\n    .ref(VOTES)\r\n    .on(\"child_added\", (child: any) => {\r\n      onVoteAdded({\r\n        key: child.key,\r\n        user: child.val().user,\r\n        artist: child.val().artist,\r\n        music: child.val().music,\r\n        performance: child.val().performance,\r\n        clothes: child.val().clothes\r\n      });\r\n    });\r\n\r\n  firebase\r\n    .database()\r\n    .ref(VOTES)\r\n    .on(\"child_changed\", (child: any) => {\r\n      onVoteChanged({\r\n        key: child.key,\r\n        user: child.val().user,\r\n        artist: child.val().artist,\r\n        music: child.val().music,\r\n        performance: child.val().performance,\r\n        clothes: child.val().clothes\r\n      });\r\n    });\r\n};\r\n\r\nexport const addVote = (vote: Vote) => {\r\n  firebase\r\n    .database()\r\n    .ref(VOTES)\r\n    .push(vote);\r\n};\r\n\r\nexport const updateVote = (vote: Vote) => {\r\n  firebase\r\n    .database()\r\n    .ref(VOTES + \"/\" + vote.key)\r\n    .set(vote);\r\n};\r\n","import React from \"react\";\r\n\r\ninterface State {}\r\n\r\ninterface Props {\r\n  onChange: (vote: any) => void;\r\n  values: any[];\r\n  value: any;\r\n  placeHolder: string;\r\n}\r\n\r\nclass VotePicker extends React.Component<Props, State> {\r\n  render() {\r\n    const renderOptions = () => {\r\n      const placeHolderOption = (\r\n        <option key=\"\" value=\"\" disabled hidden>\r\n          {this.props.placeHolder}\r\n        </option>\r\n      );\r\n      const options = this.props.values.map(value => (\r\n        <option key={value} value={value}>\r\n          {value}\r\n        </option>\r\n      ));\r\n\r\n      return [placeHolderOption, options];\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <select\r\n          className=\"u-full-width\"\r\n          onChange={event => this.props.onChange(event.target.value)}\r\n          value={this.props.value}\r\n        >\r\n          {renderOptions()}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VotePicker;\r\n","import React, { Component } from \"react\";\r\nimport { addVote, updateVote } from \"./FirebaseService\";\r\nimport VotePicker from \"./VotePicker\";\r\n\r\nexport interface Vote {\r\n  key?: string;\r\n  user: string;\r\n  artist: string;\r\n  music: number;\r\n  performance: number;\r\n  clothes: number;\r\n}\r\n\r\ninterface State {\r\n  artists: any[];\r\n  selectedArtist: any;\r\n  musicVote: any;\r\n  performanceVote: any;\r\n  clothesVote: any;\r\n}\r\n\r\ninterface Props {\r\n  votes: Vote[];\r\n}\r\n\r\nclass Voting extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      artists: [\r\n        \"Ashes to Ashes – Anna Bergendahl\",\r\n        \"Chasing Rivers – Nano\",\r\n        \"Hello – Mohombi\",\r\n        \"Mina bränder – Zeana\",\r\n        \"Mina fyra årstider – Arja Saijonmaa\",\r\n        \"No Drama – High15\",\r\n        \"Not With Me – Wiktoria\"\r\n      ],\r\n      selectedArtist: \"\",\r\n      musicVote: \"\",\r\n      performanceVote: \"\",\r\n      clothesVote: \"\"\r\n    };\r\n  }\r\n\r\n  handleVoteButtonClick = () => {\r\n    if (\r\n      !this.state.selectedArtist ||\r\n      !this.state.musicVote ||\r\n      !this.state.performanceVote ||\r\n      !this.state.clothesVote\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.vote();\r\n    this.setState({\r\n      selectedArtist: \"\",\r\n      musicVote: \"\",\r\n      performanceVote: \"\",\r\n      clothesVote: \"\"\r\n    });\r\n  };\r\n\r\n  vote = () => {\r\n    const vote = this.props.votes.find(\r\n      vote => vote.user === \"Elin\" && vote.artist === this.state.selectedArtist\r\n    );\r\n\r\n    if (vote) {\r\n      updateVote({\r\n        ...vote,\r\n        artist: this.state.selectedArtist,\r\n        music: this.state.musicVote,\r\n        performance: this.state.performanceVote,\r\n        clothes: this.state.clothesVote\r\n      });\r\n    } else {\r\n      addVote({\r\n        user: \"Elin\",\r\n        artist: this.state.selectedArtist,\r\n        music: this.state.musicVote,\r\n        performance: this.state.performanceVote,\r\n        clothes: this.state.clothesVote\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"twelve columns\">\r\n          <VotePicker\r\n            onChange={selectedArtist => this.setState({ selectedArtist })}\r\n            value={this.state.selectedArtist}\r\n            values={this.state.artists}\r\n            placeHolder=\"Välj artist\"\r\n          />\r\n        </div>\r\n        <div className=\"twelve columns\">\r\n          <VotePicker\r\n            onChange={musicVote => this.setState({ musicVote })}\r\n            value={this.state.musicVote}\r\n            values={[1, 2, 3, 4, 5]}\r\n            placeHolder=\"Rösta på musiken\"\r\n          />\r\n        </div>\r\n        <div className=\"twelve columns\">\r\n          <VotePicker\r\n            onChange={performanceVote => this.setState({ performanceVote })}\r\n            value={this.state.performanceVote}\r\n            values={[1, 2, 3, 4, 5]}\r\n            placeHolder=\"Rösta på framträdandet\"\r\n          />\r\n        </div>\r\n        <div className=\"twelve columns\">\r\n          <VotePicker\r\n            onChange={clothesVote => this.setState({ clothesVote })}\r\n            value={this.state.clothesVote}\r\n            values={[1, 2, 3, 4, 5]}\r\n            placeHolder=\"Rösta på kläderna\"\r\n          />\r\n        </div>\r\n        <div className=\"twelve columns\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"button-primary\"\r\n            onClick={this.handleVoteButtonClick}\r\n          >\r\n            Rösta!\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Voting;\r\n","import React from \"react\";\r\nimport { Vote } from \"./Voting\";\r\n\r\ninterface State {}\r\n\r\ninterface Props {\r\n  votes: Vote[];\r\n}\r\n\r\nclass VoteList extends React.Component<Props, State> {\r\n  render() {\r\n    return (\r\n      <table className=\"u-full-width\">\r\n        <thead>\r\n          <tr>\r\n            <th>Namn</th>\r\n            <th>Artist</th>\r\n            <th>M</th>\r\n            <th>F</th>\r\n            <th>K</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.votes.map(vote => (\r\n            <tr key={vote.key}>\r\n              <td>{vote.user}</td>\r\n              <td>{vote.artist}</td>\r\n              <td>{vote.music}</td>\r\n              <td>{vote.performance}</td>\r\n              <td>{vote.clothes}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VoteList;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Voting, { Vote } from \"./Voting\";\nimport { initFirebaseVotes } from \"./FirebaseService\";\nimport VoteList from \"./VoteList\";\n\ninterface State {\n  votes: Vote[];\n}\n\ninterface Props {}\n\nclass App extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { votes: [] };\n  }\n\n  componentDidMount(): void {\n    initFirebaseVotes(this.onVoteAdded, this.onVoteChanged);\n  }\n\n  onVoteAdded = (vote: Vote) => {\n    this.setState((prevState: State) => {\n      return {\n        votes: [vote, ...prevState.votes]\n      };\n    });\n  };\n\n  onVoteChanged = (changedVote: Vote) => {\n    this.setState((prevState: State) => {\n      const index: number = prevState.votes.findIndex(\n        (vote: Vote) => vote.key === changedVote.key\n      );\n\n      const left = prevState.votes.slice(0, index);\n      const right = prevState.votes.slice(index + 1);\n      return {\n        votes: left.concat(changedVote, right)\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container App\">\n        <div className=\"row\">\n          <img src=\"logo.png\" width=\"100%\" />\n        </div>\n        <div className=\"row input\">\n          <Voting votes={this.state.votes} />\n        </div>\n        <div className=\"row votes\">\n          <VoteList votes={this.state.votes} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}